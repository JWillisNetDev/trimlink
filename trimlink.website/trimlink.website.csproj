<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<IsPackable>false</IsPackable>

		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>

		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>

		<SpaRoot>ClientApplication\</SpaRoot>

		<SpaProxyServerUrl>https://localhost:5173</SpaProxyServerUrl>

		<SpaProxyLaunchCommand>npm run dev</SpaProxyLaunchCommand>

		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

	</PropertyGroup>

	<ItemGroup>
		<Content Remove="$(SpaRoot)**" />

		<None Remove="$(SpaRoot)**" />

		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />

	</ItemGroup>

	<PropertyGroup Condition=" '$(RunConfiguration)' == 'swagger - https (develop)' " />
	<PropertyGroup Condition=" '$(RunConfiguration)' == 'vite - https (production)' " />
	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="7.0.4" />

		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />

		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.5">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>

			<PrivateAssets>all</PrivateAssets>

		</PackageReference>

		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.5" />

		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />

		<PackageReference Include="AutoMapper" Version="12.0.1" />

		<PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="7.0.5" />

		<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.5" />

		<PackageReference Include="Serilog" Version="2.12.0" />
		<PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="4.1.0" />
		<PackageReference Include="Serilog.AspNetCore" Version="6.1.0" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition="'$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules')">
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />

		</Exec>

		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project." />

		<Message Importance="high" Text="Restoring dependencies using npm. This may take a minute." />

		<Exec WorkingDirectory="$(SpaRoot)" Command="npm i" />

	</Target>

	<ItemGroup>
		<ProjectReference Include="..\trimlink.data\trimlink.data.csproj">
			<GlobalPropertiesToRemove>
			</GlobalPropertiesToRemove>

		</ProjectReference>

		<ProjectReference Include="..\trimlink.core\trimlink.core.csproj">
		  <GlobalPropertiesToRemove></GlobalPropertiesToRemove>
		</ProjectReference>
	</ItemGroup>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm i" />

		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" />

			<ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>

				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>

				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>

			</ResolvedFileToPublish>

		</ItemGroup>

	</Target>

</Project>
